{"version":3,"sources":["webpack:///7.chunk.3f19d.js","webpack:///./node_modules/widgettest/dist/esm/legacy/css-shim-229ebf7a-229ebf7a.js"],"names":["webpackJsonp","x6Us","parse","text","clean","parseCss","lex","cssText","replace","RX","comments","port","root","StyleNode","length","n","i","l","OPEN_BRACE","p","previous","push","CLOSE_BRACE","node","t","substring","trim","parent","_expandUnicodeEscapes","multipleSpaces","lastIndexOf","s","indexOf","AT_START","MEDIA_START","types","MEDIA_RULE","match","keyframesRule","KEYFRAMES_RULE","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","r","code","arguments","repeat","findRegex","regex","offset","start","end","resolveVar","props","prop","fallback","executeTemplate","findVarEndIndex","count","c","parseVar","varPos","VAR_USAGE_START","endVar","varContent","_a","propName","slice","join","undefined","compileVar","template","varMeta","compileTemplate","params","final","findEndValue","onStr","double","removeCustomAssigns","assignPos","VAR_ASSIGN_START","index","COMMENTS","TRAILING_LINES","segments","resolveValues","selectors","forEach","selector","declarations","dec","value","propsValues","entries","Object","dirty","key","propValue","getSelectors","rules","filter","rule","type","getDeclarations","parsedSelector","specificity","nu","xArray","FIND_DECLARATIONS","exec","normalizeValue","important","endsWith","IMPORTANT","substr","getActiveSelectors","hostEl","hostScopeMap","globalScopes","sortSelectors","getSelectorsForScopes","concat","getScopesForElement","matches","hostTemplateMap","scopes","scope","get","parentElement","apply","sort","a","b","el","parseCSS","original","ast","isDynamic","addGlobalStyle","styleEl","css","innerHTML","updateGlobalScopes","reScope","cssScopeId","map","segment","replaceScope","sel","_extends","oldScopeId","newScopeId","replaceAll","input","find","RegExp","loadDocument","doc","loadDocumentLinks","then","loadDocumentStyles","promises","linkElms","querySelectorAll","addGlobalLink","Promise","all","styleElms","linkElm","url","href","fetch","rsp","hasCssVariables","parentNode","hasRelativeUrls","fixRelativeUrls","createElement","insertBefore","remove","catch","err","console","error","CSS_VARIABLE_REGEXP","test","CSS_URL_REGEXP","lastIndex","originalUrl","basePath","fullMatch","assign","target","source","prototype","hasOwnProperty","call","this","parsedCssText","atRule","keyframesName","customProp","mixinProp","mixinApply","varApply","CustomStyle","win","hostStyleMap","WeakMap","scopesMap","Map","initShim","_this","resolve","requestAnimationFrame","addLink","linkEl","updateGlobal","createHostStyle","has","Error","baseScope","registerHostTemplate","isDynamicScoped","needStyleEl","set","removeHost","delete","updateHost","scopeId","window","__stencil_cssshim","CSS","supports","document"],"mappings":"AAAAA,cAAc,IAERC,KACA,WCwBN,QAASC,GAAMC,GAEX,MADAA,GAAOC,EAAMD,GACNE,EAASC,EAAIH,GAAOA,GAO/B,QAASC,GAAMG,GACX,MAAOA,GAAQC,QAAQC,EAAGC,SAAU,IAAIF,QAAQC,EAAGE,KAAM,IAO7D,QAASL,GAAIH,GACT,GAAIS,GAAO,GAAIC,EACfD,GAAA,MAAgB,EAChBA,EAAA,IAAcT,EAAKW,MAEnB,KAAK,GADDC,GAAIH,EACCI,EAAI,EAAGC,EAAId,EAAKW,OAAQE,EAAIC,EAAGD,IACpC,GAAIb,EAAKa,KAAOE,EAAY,CACnBH,EAAA,QACDA,EAAA,SAEJ,IAAII,GAAIJ,EACJK,EAAWD,EAAA,MAAWA,EAAA,MAAWL,OAAS,IAAM,IACpDC,GAAI,GAAIF,GACRE,EAAA,MAAaC,EAAI,EACjBD,EAAA,OAAcI,EACdJ,EAAA,SAAgBK,EAChBD,EAAA,MAAWE,KAAKN,OAEXZ,GAAKa,KAAOM,IACjBP,EAAA,IAAWC,EAAI,EACfD,EAAIA,EAAA,QAAeH,EAG3B,OAAOA,GAQX,QAASP,GAASkB,EAAMpB,GACpB,GAAIqB,GAAIrB,EAAKsB,UAAUF,EAAA,MAAeA,EAAA,IAAc,EAEpD,IADAA,EAAA,cAAwBA,EAAA,QAAkBC,EAAEE,OACxCH,EAAKI,OAAQ,CAEbH,EAAIrB,EAAKsB,UADAF,EAAKH,SAAWG,EAAKH,SAAL,IAAuBG,EAAKI,OAAL,MACzBJ,EAAA,MAAgB,GACvCC,EAAII,EAAsBJ,GAC1BA,EAAIA,EAAEhB,QAAQC,EAAGoB,eAAgB,KAGjCL,EAAIA,EAAEC,UAAUD,EAAEM,YAAY,KAAO,EACrC,IAAIC,GAAIR,EAAA,eAAyBA,EAAA,SAAmBC,EAAEE,MACtDH,GAAA,OAA0C,IAAxBQ,EAAEC,QAAQC,GAExBV,EAAA,OAC+B,IAA3BQ,EAAEC,QAAQE,GACVX,EAAA,KAAeY,EAAMC,WAEhBL,EAAEM,MAAM5B,EAAG6B,iBAChBf,EAAA,KAAeY,EAAMI,eACrBhB,EAAA,cAAwBA,EAAA,SAAiBiB,MAAM/B,EAAGoB,gBAAgBY,OAKlElB,EAAA,KADyB,IAAzBQ,EAAEC,QAAQU,GACKP,EAAMQ,WAGNR,EAAMS,WAIjC,GAAIC,GAAKtB,EAAA,KACT,IAAIsB,EACA,IAAK,GAAI7B,GAAI,EAAGC,EAAI4B,EAAG/B,OAAQgC,MAAI,GAAS9B,EAAIC,IAAO6B,EAAID,EAAG7B,IAAKA,IAC/DX,EAASyC,EAAG3C,EAGpB,OAAOoB,GAQX,QAASK,GAAsBG,GAC3B,MAAOA,GAAEvB,QAAQ,wBAAyB,WAEtC,IADA,GAAIuC,GAAOC,UAAU,GAAIC,EAAS,EAAIF,EAAKjC,OACpCmC,KACHF,EAAO,IAAMA,CAEjB,OAAO,KAAOA,IA0BtB,QAASG,GAAUC,EAAO5C,EAAS6C,GAC/BD,EAAA,UAAqB,CACrB,IAAIL,GAAIvC,EAAQkB,UAAU2B,GAAQf,MAAMc,EACxC,IAAIL,EAAG,CACH,GAAIO,GAAQD,EAASN,EAAA,KACrB,QACIO,MAAOA,EACPC,IAAKD,EAAQP,EAAE,GAAGhC,QAG1B,MAAO,MAMX,QAASyC,GAAWC,EAAOC,EAAMC,GAC7B,MAAIF,GAAMC,GACCD,EAAMC,GAEbC,EACOC,EAAgBD,EAAUF,GAE9B,GAEX,QAASI,GAAgBrD,EAAS6C,GAG9B,IAFA,GAAIS,GAAQ,EACR7C,EAAIoC,EACDpC,EAAIT,EAAQO,OAAQE,IAAK,CAC5B,GAAI8C,GAAIvD,EAAQS,EAChB,IAAU,MAAN8C,EACAD,QAEC,IAAU,MAANC,KACLD,GACa,EACT,MAAO7C,GAAI,EAIvB,MAAOA,GAEX,QAAS+C,GAASxD,EAAS6C,GACvB,GAAIY,GAASd,EAAUe,EAAiB1D,EAAS6C,EACjD,KAAKY,EACD,MAAO,KAEX,IAAIE,GAASN,EAAgBrD,EAASyD,EAAOX,OACzCc,EAAa5D,EAAQkB,UAAUuC,EAAOV,IAAKY,EAAS,GACpDE,EAAKD,EAAW3B,MAAM,KAAM6B,EAAWD,EAAG,GAAIV,EAAWU,EAAGE,MAAM,EACtE,QACIjB,MAAOW,EAAOX,MACdC,IAAKY,EACLG,SAAUA,EAAS3C,OACnBgC,SAAUA,EAAS5C,OAAS,EAAI4C,EAASa,KAAK,KAAK7C,WAAS8C,IAGpE,QAASC,GAAWlE,EAASmE,EAAUtB,GACnC,GAAIuB,GAAUZ,EAASxD,EAAS6C,EAChC,KAAKuB,EAED,MADAD,GAASrD,KAAKd,EAAQkB,UAAU2B,EAAQ7C,EAAQO,SACzCP,EAAQO,MAEnB,IAAIuD,GAAWM,EAAQN,SACnBX,EAA+B,MAApBiB,EAAQjB,SAAmBkB,EAAgBD,EAAQjB,cAAYc,EAE9E,OADAE,GAASrD,KAAKd,EAAQkB,UAAU2B,EAAQuB,EAAQtB,OAAQ,SAAUwB,GAAU,MAAOtB,GAAWsB,EAAQR,EAAUX,KACzGiB,EAAQrB,IAEnB,QAASK,GAAgBe,EAAUlB,GAE/B,IAAK,GADDsB,GAAQ,GACH9D,EAAI,EAAGA,EAAI0D,EAAS5D,OAAQE,IAAK,CACtC,GAAIe,GAAI2C,EAAS1D,EACjB8D,IAAuB,gBAAN/C,GACXA,EACAA,EAAEyB,GAEZ,MAAOsB,GAEX,QAASC,GAAaxE,EAAS6C,GAI3B,IAHA,GAAI4B,IAAQ,EACRC,GAAS,EACTjE,EAAIoC,EACDpC,EAAIT,EAAQO,OAAQE,IAAK,CAC5B,GAAI8C,GAAIvD,EAAQS,EAChB,IAAIgE,EACIC,GAAgB,MAANnB,IACVkB,GAAQ,GAEPC,GAAgB,MAANnB,IACXkB,GAAQ,OAIZ,IAAU,MAANlB,EACAkB,GAAQ,EACRC,GAAS,MAER,IAAU,MAANnB,EACLkB,GAAQ,EACRC,GAAS,MAER,IAAU,MAANnB,EACL,MAAO9C,GAAI,CAEV,IAAU,MAAN8C,EACL,MAAO9C,IAInB,MAAOA,GAEX,QAASkE,GAAoB3E,GAGzB,IAFA,GAAIuE,GAAQ,GACR1B,EAAS,IACA,CACT,GAAI+B,GAAYjC,EAAUkC,EAAkB7E,EAAS6C,GACjDC,EAAQ8B,EAAYA,EAAU9B,MAAQ9C,EAAQO,MAElD,IADAgE,GAASvE,EAAQkB,UAAU2B,EAAQC,IAC/B8B,EAIA,KAHA/B,GAAS2B,EAAaxE,EAAS8C,GAMvC,MAAOyB,GAEX,QAASF,GAAgBrE,GACrB,GAAI8E,GAAQ,CACZ9E,GAAUA,EAAQC,QAAQ8E,EAAU,IACpC/E,EAAU2E,EAAoB3E,GACzBC,QAAQ+E,EAAgB,GAE7B,KADA,GAAIC,MACGH,EAAQ9E,EAAQO,QACnBuE,EAAQZ,EAAWlE,EAASiF,EAAUH,EAE1C,OAAOG,GAEX,QAASC,GAAcC,GACnB,GAAIlC,KACJkC,GAAUC,QAAQ,SAAUC,GACxBA,EAASC,aAAaF,QAAQ,SAAUG,GACpCtC,EAAMsC,EAAIrC,MAAQqC,EAAIC,SAmB9B,KAAK,GAhBDC,MACAC,EAAUC,OAAOD,QAAQzC,GAepBxC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAEzB,GAAgB,UAhBN,WACV,GAAImF,IAAQ,CASZ,IARAF,EAAQN,QAAQ,SAAUvB,GACtB,GAAIgC,GAAMhC,EAAG,GAAI2B,EAAQ3B,EAAG,GACxBiC,EAAY1C,EAAgBoC,EAAOC,EACnCK,KAAcL,EAAYI,KAC1BJ,EAAYI,GAAOC,EACnBF,GAAQ,MAGXA,EACD,MAAO,WAMP,MAER,MAAOH,GAEX,QAASM,GAAa1F,EAAMyE,GAIxB,OAHc,KAAVA,IACAA,EAAQ,IAEPzE,EAAK2F,MACN,QAEJ,IAAIb,KAkBJ,OAjBA9E,GAAK2F,MACAC,OAAO,SAAUC,GAAQ,MAAOA,GAAKC,OAASvE,EAAMS,aACpD+C,QAAQ,SAAUc,GACnB,GAAIZ,GAAec,EAAgBF,EAAKlG,QACpCsF,GAAa/E,OAAS,GACtB2F,EAAKG,eAAepE,MAAM,KAAKmD,QAAQ,SAAUC,GAC7CA,EAAWA,EAASlE,OACpBgE,EAAUrE,MACNuE,SAAUA,EACVC,aAAcA,EACdgB,YAUT,EATSC,GAAIzB,MAIhBA,MAEGK,EAOX,QAASiB,GAAgBpG,GAGrB,IAFA,GACIwG,GADAlB,KAEGkB,EAASC,EAAkBC,KAAK1G,EAAQmB,SAAS,CACpD,GAAI0C,GAAK8C,EAAeH,EAAO,IAAKhB,EAAQ3B,EAAG2B,MAAOoB,EAAY/C,EAAG+C,SACrEtB,GAAaxE,MACToC,KAAMsD,EAAO,GAAGrF,OAChBqE,MAAOnB,EAAgBmB,GACvBoB,UAAWA,IAGnB,MAAOtB,GAEX,QAASqB,GAAenB,GAEpBA,EAAQA,EAAMvF,QADF,SACiB,KAAKkB,MAClC,IAAIyF,GAAYpB,EAAMqB,SAASC,EAI/B,OAHIF,KACApB,EAAQA,EAAMuB,OAAO,EAAGvB,EAAMjF,OAASuG,EAAUvG,QAAQY,SAGzDqE,MAAOA,EACPoB,UAAWA,GAGnB,QAASI,GAAmBC,EAAQC,EAAcC,GAS9C,MAAOC,GAJWC,EAHLF,EAAaG,OAAOC,EAAoBL,EAAcD,KAKjChB,OAAO,SAAUZ,GAAY,MAAOmC,GAAQP,EAAQ5B,EAASA,aAInG,QAASkC,GAAoBE,EAAiBzG,GAE1C,IADA,GAAI0G,MACG1G,GAAM,CACT,GAAI2G,GAAQF,EAAgBG,IAAI5G,EAC5B2G,IACAD,EAAO5G,KAAK6G,GAEhB3G,EAAOA,EAAK6G,cAEhB,MAAOH,GAEX,QAASL,GAAsBK,GAC3B,GAAIvC,KAIJ,OAHAuC,GAAOtC,QAAQ,SAAUuC,GACrBxC,EAAUrE,KAAKgH,MAAM3C,EAAWwC,EAAMxC,aAEnCA,EAEX,QAASiC,GAAcjC,GAOnB,MANAA,GAAU4C,KAAK,SAAUC,EAAGC,GACxB,MAAID,GAAE1B,cAAgB2B,EAAE3B,YACb0B,EAAEzB,GAAK0B,EAAE1B,GAEbyB,EAAE1B,YAAc2B,EAAE3B,cAEtBnB,EAEX,QAASqC,GAAQU,EAAI7C,GACjB,MAAO6C,GAAGV,QAAQnC,GAEtB,QAAS8C,GAASC,GACd,GAAIC,GAAM1I,EAAMyI,GACZjE,EAAWE,EAAgB+D,EAE/B,QACIA,SAAUA,EACVjE,SAAUA,EACVgB,UAJYY,EAAasC,GAKzBC,UAAWnE,EAAS5D,OAAS,GAGrC,QAASgI,GAAepB,EAAcqB,GAClC,GAAIC,GAAMN,EAASK,EAAQE,UAC3BD,GAAID,QAAUA,EACdrB,EAAarG,KAAK2H,GAEtB,QAASE,GAAmBjB,GACxB,GAAIvC,GAAYkC,EAAsBK,GAClCzE,EAAQiC,EAAcC,EAC1BuC,GAAOtC,QAAQ,SAAUuC,GACjBA,EAAMW,YACNX,EAAMa,QAAQE,UAAYtF,EAAgBuE,EAAMxD,SAAUlB,MAItE,QAAS2F,GAAQjB,EAAOkB,GACpB,GAAI1E,GAAWwD,EAAMxD,SAAS2E,IAAI,SAAUC,GACxC,MAA2B,gBAAZA,GACTC,EAAaD,EAASpB,EAAMkB,WAAYA,GACxCE,IAEN5D,EAAYwC,EAAMxC,UAAU2D,IAAI,SAAUG,GAC1C,MAAOC,MAAkBD,GAAO5D,SAAU2D,EAAaC,EAAI5D,SAAUsC,EAAMkB,WAAYA,MAE3F,OAAOK,MAAkBvB,GAASxD,SAAUA,EACxCgB,UAAWA,EACX0D,WAAYA,IAEpB,QAASG,GAAaZ,EAAUe,EAAYC,GAExC,MADAhB,GAAWiB,EAAWjB,EAAU,MAAQe,EAAY,IAAMC,GAG9D,QAASC,GAAWC,EAAOC,EAAMtJ,GAC7B,MAAOqJ,GAAMrJ,QAAQ,GAAIuJ,QAAOD,EAAM,KAAMtJ,GAEhD,QAASwJ,GAAaC,EAAKvC,GACvB,MAAOwC,GAAkBD,EAAKvC,GAAcyC,KAAK,WAC7CC,EAAmBH,EAAKvC,KAGhC,QAASwC,GAAkBD,EAAKvC,GAG5B,IAAK,GAFD2C,MACAC,EAAWL,EAAIM,iBAAiB,gCAC3BvJ,EAAI,EAAGA,EAAIsJ,EAASxJ,OAAQE,IACjCqJ,EAAShJ,KAAKmJ,EAAcP,EAAKvC,EAAc4C,EAAStJ,IAE5D,OAAOyJ,SAAQC,IAAIL,GAEvB,QAASD,GAAmBH,EAAKvC,GAE7B,IAAK,GADDiD,GAAYV,EAAIM,iBAAiB,SAC5BvJ,EAAI,EAAGA,EAAI2J,EAAU7J,OAAQE,IAClC8H,EAAepB,EAAciD,EAAU3J,IAG/C,QAASwJ,GAAcP,EAAKvC,EAAckD,GACtC,GAAIC,GAAMD,EAAQE,IAClB,OAAOC,OAAMF,GAAKV,KAAK,SAAUa,GAAO,MAAOA,GAAI7K,SAAWgK,KAAK,SAAUhK,GACzE,GAAI8K,EAAgB9K,IAASyK,EAAQM,WAAY,CACzCC,EAAgBhL,KAChBA,EAAOiL,EAAgBjL,EAAM0K,GAEjC,IAAI9B,GAAUkB,EAAIoB,cAAc,QAChCtC,GAAQE,UAAY9I,EACpB2I,EAAepB,EAAcqB,GAC7B6B,EAAQM,WAAWI,aAAavC,EAAS6B,GACzCA,EAAQW,YAEbC,MAAM,SAAUC,GACfC,QAAQC,MAAMF,KActB,QAASR,GAAgBjC,GACrB,MAAOA,GAAIhH,QAAQ,SAAW,GAAK4J,EAAoBC,KAAK7C,GAIhE,QAASmC,GAAgBnC,GAErB,MADA8C,GAAeC,UAAY,EACpBD,EAAeD,KAAK7C,GAE/B,QAASoC,GAAgBpC,EAAKgD,GAE1B,GAAIC,GAAWD,EAAYxL,QAAQ,UAAU,GAE7C,OAAOwI,GAAIxI,QAAQsL,EAAgB,SAAUI,EAAWrB,GAIpD,MAAOqB,GAAU1L,QAAQqK,EADPoB,EAAWpB,KD1gBrC,GAAIpB,GAAWvD,OAAOiG,QAAU,SAAUC,GAAU,IAAK,GAAIpL,GAAI,EAAGA,EAAIgC,UAAUlC,OAAQE,IAAK,CAAE,GAAIqL,GAASrJ,UAAUhC,EAAI,KAAK,GAAIoF,KAAOiG,GAAcnG,OAAOoG,UAAUC,eAAeC,KAAKH,EAAQjG,KAAQgG,EAAOhG,GAAOiG,EAAOjG,IAAY,MAAOgG,ICAnPvL,EAA2B,WAC3B,QAASA,KACL4L,KAAKpJ,MAAQ,EACboJ,KAAKnJ,IAAM,EACXmJ,KAAKrL,SAAW,KAChBqL,KAAK9K,OAAS,KACd8K,KAAKlG,MAAQ,KACbkG,KAAKC,cAAgB,GACrBD,KAAKlM,QAAU,GACfkM,KAAKE,QAAS,EACdF,KAAK/F,KAAO,EACZ+F,KAAKG,cAAgB,GACrBH,KAAK7G,SAAW,GAChB6G,KAAK7F,eAAiB,GAE1B,MAAO/F,MA+GPsB,GACAS,WAAY,EACZL,eAAgB,EAChBH,WAAY,EACZO,WAAY,KAEZzB,EAAa,IACbI,EAAc,IAEdb,GACAC,SAAU,qCACVC,KAAM,mBACNkM,WAAY,oDACZC,UAAW,6DACXC,WAAY,0CACZC,SAAU,4CACV1K,cAAe,oBACfT,eAAgB,QAEhBa,EAAY,KACZR,EAAc,SACdD,EAAW,IAaXgC,EAAkB,UAClBmB,EAAmB,iBACnBE,EAAW,qCACXC,EAAiB,cAuLjB8B,EAAY,aACZL,EAAoB,0HA8JpB4E,EAAsB,6BAKtBE,EAAiB,oEAgBjBmB,EAA6B,WAC7B,QAASA,GAAYC,EAAKjD,GACtBwC,KAAKS,IAAMA,EACXT,KAAKxC,IAAMA,EACXwC,KAAK5I,MAAQ,EACb4I,KAAKU,aAAe,GAAIC,SACxBX,KAAKhF,aAAe,GAAI2F,SACxBX,KAAK/E,gBACL+E,KAAKY,UAAY,GAAIC,KAkFzB,MAhFAL,GAAYX,UAAUiB,SAAW,WAC7B,GAAIC,GAAQf,IACZ,OAAO,IAAIhC,SAAQ,SAAUgD,GACzBD,EAAMN,IAAIQ,sBAAsB,WAC5B1D,EAAawD,EAAMvD,IAAKuD,EAAM9F,cAAcyC,KAAK,WAAc,MAAOsD,YAIlFR,EAAYX,UAAUqB,QAAU,SAAUC,GACtC,GAAIJ,GAAQf,IACZ,OAAOjC,GAAciC,KAAKxC,IAAKwC,KAAK/E,aAAckG,GAAQzD,KAAK,WAC3DqD,EAAMK,kBAGdZ,EAAYX,UAAUxD,eAAiB,SAAUC,GAC7CD,EAAe2D,KAAK/E,aAAcqB,GAClC0D,KAAKoB,gBAETZ,EAAYX,UAAUwB,gBAAkB,SAAUtG,EAAQ4B,EAAY7I,GAClE,GAAIkM,KAAKhF,aAAasG,IAAIvG,GACtB,KAAM,IAAIwG,OAAM,6BAEpB,IAAIC,GAAYxB,KAAKyB,qBAAqB3N,EAAS6I,GAC/C+E,KAAqBF,EAAUpF,YAAaoF,EAAU7E,YACtDgF,EAAcD,IAAoBF,EAAUlF,QAC5CA,EAAU0D,KAAKxC,IAAIoB,cAAc,QAsBrC,OArBK+C,GAIGD,GACApF,EAAQ,QAAUK,EAAa6E,EAAU7E,WAAa,IAAMqD,KAAK5I,MACjEkF,EAAQE,UAAY,mBACpBwD,KAAKU,aAAakB,IAAI7G,EAAQuB,GAC9B0D,KAAKhF,aAAa4G,IAAI7G,EAAQ2B,EAAQ8E,EAAW7E,IACjDqD,KAAK5I,UAGLoK,EAAUlF,QAAUA,EACfkF,EAAUpF,YACXE,EAAQE,UAAYtF,EAAgBsK,EAAUvJ,cAElD+H,KAAK/E,aAAarG,KAAK4M,GACvBxB,KAAKoB,eACLpB,KAAKhF,aAAa4G,IAAI7G,EAAQyG,IAjBlClF,EAAQE,UAAY1I,EAoBjBwI,GAEXkE,EAAYX,UAAUgC,WAAa,SAAU9G,GACzC,GAAIwB,GAAMyD,KAAKU,aAAahF,IAAIX,EAC5BwB,IACAA,EAAIuC,SAERkB,KAAKU,aAAaoB,OAAO/G,GACzBiF,KAAKhF,aAAa8G,OAAO/G,IAE7ByF,EAAYX,UAAUkC,WAAa,SAAUhH,GACzC,GAAIU,GAAQuE,KAAKhF,aAAaU,IAAIX,EAClC,IAAIU,GAASA,EAAMW,WAAaX,EAAMkB,WAAY,CAC9C,GAAIL,GAAU0D,KAAKU,aAAahF,IAAIX,EACpC,IAAIuB,EAAS,CAGTA,EAAQE,UAAYtF,EAAgBuE,EAAMxD,SAD9Be,EADI8B,EAAmBC,EAAQiF,KAAKhF,aAAcgF,KAAK/E,mBAM/EuF,EAAYX,UAAUuB,aAAe,WACjC3E,EAAmBuD,KAAK/E,eAE5BuF,EAAYX,UAAU4B,qBAAuB,SAAU3N,EAASkO,GAC5D,GAAIvG,GAAQuE,KAAKY,UAAUlF,IAAIsG,EAM/B,OALKvG,KACDA,EAAQQ,EAASnI,GACjB2H,EAAMkB,WAAaqF,EACnBhC,KAAKY,UAAUgB,IAAII,EAASvG,IAEzBA,GAEJ+E,KAEPC,GAAMwB,QAILxB,GAAIyB,mBAHT,WACI,QAASzB,GAAI0B,KAAO1B,GAAI0B,IAAIC,UAAY3B,GAAI0B,IAAIC,SAAS,QAAS,kBAGlE3B,GAAIyB,kBAAoB,GAAI1B,GAAYC,GAAK4B","file":"7.chunk.3f19d.js","sourcesContent":["webpackJsonp([7],{\n\n/***/ \"x6Us\":\n/***/ (function(module, exports) {\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n/** @unrestricted */\nvar StyleNode = /** @class */function () {\n    function StyleNode() {\n        this.start = 0;\n        this.end = 0;\n        this.previous = null;\n        this.parent = null;\n        this.rules = null;\n        this.parsedCssText = '';\n        this.cssText = '';\n        this.atRule = false;\n        this.type = 0;\n        this.keyframesName = '';\n        this.selector = '';\n        this.parsedSelector = '';\n    }\n    return StyleNode;\n}();\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parse(text) {\n    text = clean(text);\n    return parseCss(lex(text), text);\n}\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n    return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n    var root = new StyleNode();\n    root['start'] = 0;\n    root['end'] = text.length;\n    var n = root;\n    for (var i = 0, l = text.length; i < l; i++) {\n        if (text[i] === OPEN_BRACE) {\n            if (!n['rules']) {\n                n['rules'] = [];\n            }\n            var p = n;\n            var previous = p['rules'][p['rules'].length - 1] || null;\n            n = new StyleNode();\n            n['start'] = i + 1;\n            n['parent'] = p;\n            n['previous'] = previous;\n            p['rules'].push(n);\n        } else if (text[i] === CLOSE_BRACE) {\n            n['end'] = i + 1;\n            n = n['parent'] || root;\n        }\n    }\n    return root;\n}\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n    var t = text.substring(node['start'], node['end'] - 1);\n    node['parsedCssText'] = node['cssText'] = t.trim();\n    if (node.parent) {\n        var ss = node.previous ? node.previous['end'] : node.parent['start'];\n        t = text.substring(ss, node['start'] - 1);\n        t = _expandUnicodeEscapes(t);\n        t = t.replace(RX.multipleSpaces, ' ');\n        // TODO(sorvell): ad hoc; make selector include only after last ;\n        // helps with mixin syntax\n        t = t.substring(t.lastIndexOf(';') + 1);\n        var s = node['parsedSelector'] = node['selector'] = t.trim();\n        node['atRule'] = s.indexOf(AT_START) === 0;\n        // note, support a subset of rule types...\n        if (node['atRule']) {\n            if (s.indexOf(MEDIA_START) === 0) {\n                node['type'] = types.MEDIA_RULE;\n            } else if (s.match(RX.keyframesRule)) {\n                node['type'] = types.KEYFRAMES_RULE;\n                node['keyframesName'] = node['selector'].split(RX.multipleSpaces).pop();\n            }\n        } else {\n            if (s.indexOf(VAR_START) === 0) {\n                node['type'] = types.MIXIN_RULE;\n            } else {\n                node['type'] = types.STYLE_RULE;\n            }\n        }\n    }\n    var r$ = node['rules'];\n    if (r$) {\n        for (var i = 0, l = r$.length, r = void 0; i < l && (r = r$[i]); i++) {\n            parseCss(r, text);\n        }\n    }\n    return node;\n}\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n    return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function () {\n        var code = arguments[1],\n            repeat = 6 - code.length;\n        while (repeat--) {\n            code = '0' + code;\n        }\n        return '\\\\' + code;\n    });\n}\n/** @enum {number} */\nvar types = {\n    STYLE_RULE: 1,\n    KEYFRAMES_RULE: 7,\n    MEDIA_RULE: 4,\n    MIXIN_RULE: 1000\n};\nvar OPEN_BRACE = '{';\nvar CLOSE_BRACE = '}';\n// helper regexp's\nvar RX = {\n    comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n    port: /@import[^;]*;/gim,\n    customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n    mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n    mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n    varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n    keyframesRule: /^@[^\\s]*keyframes/,\n    multipleSpaces: /\\s+/g\n};\nvar VAR_START = '--';\nvar MEDIA_START = '@media';\nvar AT_START = '@';\nfunction findRegex(regex, cssText, offset) {\n    regex['lastIndex'] = 0;\n    var r = cssText.substring(offset).match(regex);\n    if (r) {\n        var start = offset + r['index'];\n        return {\n            start: start,\n            end: start + r[0].length\n        };\n    }\n    return null;\n}\nvar VAR_USAGE_START = /\\bvar\\(/;\nvar VAR_ASSIGN_START = /\\B--[\\w-]+\\s*:/;\nvar COMMENTS = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim;\nvar TRAILING_LINES = /^[\\t ]+\\n/gm;\nfunction resolveVar(props, prop, fallback) {\n    if (props[prop]) {\n        return props[prop];\n    }\n    if (fallback) {\n        return executeTemplate(fallback, props);\n    }\n    return '';\n}\nfunction findVarEndIndex(cssText, offset) {\n    var count = 0;\n    var i = offset;\n    for (; i < cssText.length; i++) {\n        var c = cssText[i];\n        if (c === '(') {\n            count++;\n        } else if (c === ')') {\n            count--;\n            if (count <= 0) {\n                return i + 1;\n            }\n        }\n    }\n    return i;\n}\nfunction parseVar(cssText, offset) {\n    var varPos = findRegex(VAR_USAGE_START, cssText, offset);\n    if (!varPos) {\n        return null;\n    }\n    var endVar = findVarEndIndex(cssText, varPos.start);\n    var varContent = cssText.substring(varPos.end, endVar - 1);\n    var _a = varContent.split(','),\n        propName = _a[0],\n        fallback = _a.slice(1);\n    return {\n        start: varPos.start,\n        end: endVar,\n        propName: propName.trim(),\n        fallback: fallback.length > 0 ? fallback.join(',').trim() : undefined\n    };\n}\nfunction compileVar(cssText, template, offset) {\n    var varMeta = parseVar(cssText, offset);\n    if (!varMeta) {\n        template.push(cssText.substring(offset, cssText.length));\n        return cssText.length;\n    }\n    var propName = varMeta.propName;\n    var fallback = varMeta.fallback != null ? compileTemplate(varMeta.fallback) : undefined;\n    template.push(cssText.substring(offset, varMeta.start), function (params) {\n        return resolveVar(params, propName, fallback);\n    });\n    return varMeta.end;\n}\nfunction executeTemplate(template, props) {\n    var final = '';\n    for (var i = 0; i < template.length; i++) {\n        var s = template[i];\n        final += typeof s === 'string' ? s : s(props);\n    }\n    return final;\n}\nfunction findEndValue(cssText, offset) {\n    var onStr = false;\n    var double = false;\n    var i = offset;\n    for (; i < cssText.length; i++) {\n        var c = cssText[i];\n        if (onStr) {\n            if (double && c === '\"') {\n                onStr = false;\n            }\n            if (!double && c === '\\'') {\n                onStr = false;\n            }\n        } else {\n            if (c === '\"') {\n                onStr = true;\n                double = true;\n            } else if (c === '\\'') {\n                onStr = true;\n                double = false;\n            } else if (c === ';') {\n                return i + 1;\n            } else if (c === '}') {\n                return i;\n            }\n        }\n    }\n    return i;\n}\nfunction removeCustomAssigns(cssText) {\n    var final = '';\n    var offset = 0;\n    while (true) {\n        var assignPos = findRegex(VAR_ASSIGN_START, cssText, offset);\n        var start = assignPos ? assignPos.start : cssText.length;\n        final += cssText.substring(offset, start);\n        if (assignPos) {\n            offset = findEndValue(cssText, start);\n        } else {\n            break;\n        }\n    }\n    return final;\n}\nfunction compileTemplate(cssText) {\n    var index = 0;\n    cssText = cssText.replace(COMMENTS, '');\n    cssText = removeCustomAssigns(cssText).replace(TRAILING_LINES, '');\n    var segments = [];\n    while (index < cssText.length) {\n        index = compileVar(cssText, segments, index);\n    }\n    return segments;\n}\nfunction resolveValues(selectors) {\n    var props = {};\n    selectors.forEach(function (selector) {\n        selector.declarations.forEach(function (dec) {\n            props[dec.prop] = dec.value;\n        });\n    });\n    var propsValues = {};\n    var entries = Object.entries(props);\n    var _loop_1 = function _loop_1(i) {\n        var dirty = false;\n        entries.forEach(function (_a) {\n            var key = _a[0],\n                value = _a[1];\n            var propValue = executeTemplate(value, propsValues);\n            if (propValue !== propsValues[key]) {\n                propsValues[key] = propValue;\n                dirty = true;\n            }\n        });\n        if (!dirty) {\n            return \"break\";\n        }\n    };\n    for (var i = 0; i < 10; i++) {\n        var state_1 = _loop_1(i);\n        if (state_1 === \"break\") break;\n    }\n    return propsValues;\n}\nfunction getSelectors(root, index) {\n    if (index === void 0) {\n        index = 0;\n    }\n    if (!root.rules) {\n        return [];\n    }\n    var selectors = [];\n    root.rules.filter(function (rule) {\n        return rule.type === types.STYLE_RULE;\n    }).forEach(function (rule) {\n        var declarations = getDeclarations(rule.cssText);\n        if (declarations.length > 0) {\n            rule.parsedSelector.split(',').forEach(function (selector) {\n                selector = selector.trim();\n                selectors.push({\n                    selector: selector,\n                    declarations: declarations,\n                    specificity: computeSpecificity(selector),\n                    nu: index\n                });\n            });\n        }\n        index++;\n    });\n    return selectors;\n}\nfunction computeSpecificity(_selector) {\n    return 1;\n}\nvar IMPORTANT = '!important';\nvar FIND_DECLARATIONS = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gm;\nfunction getDeclarations(cssText) {\n    var declarations = [];\n    var xArray;\n    while (xArray = FIND_DECLARATIONS.exec(cssText.trim())) {\n        var _a = normalizeValue(xArray[2]),\n            value = _a.value,\n            important = _a.important;\n        declarations.push({\n            prop: xArray[1].trim(),\n            value: compileTemplate(value),\n            important: important\n        });\n    }\n    return declarations;\n}\nfunction normalizeValue(value) {\n    var regex = /\\s+/gim;\n    value = value.replace(regex, ' ').trim();\n    var important = value.endsWith(IMPORTANT);\n    if (important) {\n        value = value.substr(0, value.length - IMPORTANT.length).trim();\n    }\n    return {\n        value: value,\n        important: important\n    };\n}\nfunction getActiveSelectors(hostEl, hostScopeMap, globalScopes) {\n    // computes the css scopes that might affect this particular element\n    var scopes = globalScopes.concat(getScopesForElement(hostScopeMap, hostEl));\n    // each scope might have an array of associated selectors\n    // let's flatten the complete array of selectors from all the scopes\n    var selectorSet = getSelectorsForScopes(scopes);\n    // we filter to only the selectors that matches the hostEl\n    var activeSelectors = selectorSet.filter(function (selector) {\n        return matches(hostEl, selector.selector);\n    });\n    // sort selectors by specifity\n    return sortSelectors(activeSelectors);\n}\nfunction getScopesForElement(hostTemplateMap, node) {\n    var scopes = [];\n    while (node) {\n        var scope = hostTemplateMap.get(node);\n        if (scope) {\n            scopes.push(scope);\n        }\n        node = node.parentElement;\n    }\n    return scopes;\n}\nfunction getSelectorsForScopes(scopes) {\n    var selectors = [];\n    scopes.forEach(function (scope) {\n        selectors.push.apply(selectors, scope.selectors);\n    });\n    return selectors;\n}\nfunction sortSelectors(selectors) {\n    selectors.sort(function (a, b) {\n        if (a.specificity === b.specificity) {\n            return a.nu - b.nu;\n        }\n        return a.specificity - b.specificity;\n    });\n    return selectors;\n}\nfunction matches(el, selector) {\n    return el.matches(selector);\n}\nfunction parseCSS(original) {\n    var ast = parse(original);\n    var template = compileTemplate(original);\n    var selectors = getSelectors(ast);\n    return {\n        original: original,\n        template: template,\n        selectors: selectors,\n        isDynamic: template.length > 1\n    };\n}\nfunction addGlobalStyle(globalScopes, styleEl) {\n    var css = parseCSS(styleEl.innerHTML);\n    css.styleEl = styleEl;\n    globalScopes.push(css);\n}\nfunction updateGlobalScopes(scopes) {\n    var selectors = getSelectorsForScopes(scopes);\n    var props = resolveValues(selectors);\n    scopes.forEach(function (scope) {\n        if (scope.isDynamic) {\n            scope.styleEl.innerHTML = executeTemplate(scope.template, props);\n        }\n    });\n}\nfunction reScope(scope, cssScopeId) {\n    var template = scope.template.map(function (segment) {\n        return typeof segment === 'string' ? replaceScope(segment, scope.cssScopeId, cssScopeId) : segment;\n    });\n    var selectors = scope.selectors.map(function (sel) {\n        return _extends({}, sel, { selector: replaceScope(sel.selector, scope.cssScopeId, cssScopeId) });\n    });\n    return _extends({}, scope, { template: template,\n        selectors: selectors,\n        cssScopeId: cssScopeId });\n}\nfunction replaceScope(original, oldScopeId, newScopeId) {\n    original = replaceAll(original, \"\\\\.\" + oldScopeId, \".\" + newScopeId);\n    return original;\n}\nfunction replaceAll(input, find, replace) {\n    return input.replace(new RegExp(find, 'g'), replace);\n}\nfunction loadDocument(doc, globalScopes) {\n    return loadDocumentLinks(doc, globalScopes).then(function () {\n        loadDocumentStyles(doc, globalScopes);\n    });\n}\nfunction loadDocumentLinks(doc, globalScopes) {\n    var promises = [];\n    var linkElms = doc.querySelectorAll('link[rel=\"stylesheet\"][href]');\n    for (var i = 0; i < linkElms.length; i++) {\n        promises.push(addGlobalLink(doc, globalScopes, linkElms[i]));\n    }\n    return Promise.all(promises);\n}\nfunction loadDocumentStyles(doc, globalScopes) {\n    var styleElms = doc.querySelectorAll('style');\n    for (var i = 0; i < styleElms.length; i++) {\n        addGlobalStyle(globalScopes, styleElms[i]);\n    }\n}\nfunction addGlobalLink(doc, globalScopes, linkElm) {\n    var url = linkElm.href;\n    return fetch(url).then(function (rsp) {\n        return rsp.text();\n    }).then(function (text) {\n        if (hasCssVariables(text) && linkElm.parentNode) {\n            if (hasRelativeUrls(text)) {\n                text = fixRelativeUrls(text, url);\n            }\n            var styleEl = doc.createElement('style');\n            styleEl.innerHTML = text;\n            addGlobalStyle(globalScopes, styleEl);\n            linkElm.parentNode.insertBefore(styleEl, linkElm);\n            linkElm.remove();\n        }\n    }).catch(function (err) {\n        console.error(err);\n    });\n}\n// This regexp tries to determine when a variable is declared, for example:\n//\n// .my-el { --highlight-color: green; }\n//\n// but we don't want to trigger when a classname uses \"--\" or a pseudo-class is\n// used. We assume that the only characters that can preceed a variable\n// declaration are \"{\", from an opening block, \";\" from a preceeding rule, or a\n// space. This prevents the regexp from matching a word in a selector, since\n// they would need to start with a \".\" or \"#\". (We assume element names don't\n// start with \"--\").\nvar CSS_VARIABLE_REGEXP = /[\\s;{]--[-a-zA-Z0-9]+\\s*:/m;\nfunction hasCssVariables(css) {\n    return css.indexOf('var(') > -1 || CSS_VARIABLE_REGEXP.test(css);\n}\n// This regexp find all url() usages with relative urls\nvar CSS_URL_REGEXP = /url[\\s]*\\([\\s]*['\"]?(?![http|/])([^\\'\\\"\\)]*)[\\s]*['\"]?\\)[\\s]*/gim;\nfunction hasRelativeUrls(css) {\n    CSS_URL_REGEXP.lastIndex = 0;\n    return CSS_URL_REGEXP.test(css);\n}\nfunction fixRelativeUrls(css, originalUrl) {\n    // get the basepath from the original import url\n    var basePath = originalUrl.replace(/[^/]*$/, '');\n    // replace the relative url, with the new relative url\n    return css.replace(CSS_URL_REGEXP, function (fullMatch, url) {\n        // rhe new relative path is the base path + uri\n        // TODO: normalize relative URL\n        var relativeUrl = basePath + url;\n        return fullMatch.replace(url, relativeUrl);\n    });\n}\nvar CustomStyle = /** @class */function () {\n    function CustomStyle(win, doc) {\n        this.win = win;\n        this.doc = doc;\n        this.count = 0;\n        this.hostStyleMap = new WeakMap();\n        this.hostScopeMap = new WeakMap();\n        this.globalScopes = [];\n        this.scopesMap = new Map();\n    }\n    CustomStyle.prototype.initShim = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this.win.requestAnimationFrame(function () {\n                loadDocument(_this.doc, _this.globalScopes).then(function () {\n                    return resolve();\n                });\n            });\n        });\n    };\n    CustomStyle.prototype.addLink = function (linkEl) {\n        var _this = this;\n        return addGlobalLink(this.doc, this.globalScopes, linkEl).then(function () {\n            _this.updateGlobal();\n        });\n    };\n    CustomStyle.prototype.addGlobalStyle = function (styleEl) {\n        addGlobalStyle(this.globalScopes, styleEl);\n        this.updateGlobal();\n    };\n    CustomStyle.prototype.createHostStyle = function (hostEl, cssScopeId, cssText) {\n        if (this.hostScopeMap.has(hostEl)) {\n            throw new Error('host style already created');\n        }\n        var baseScope = this.registerHostTemplate(cssText, cssScopeId);\n        var isDynamicScoped = !!(baseScope.isDynamic && baseScope.cssScopeId);\n        var needStyleEl = isDynamicScoped || !baseScope.styleEl;\n        var styleEl = this.doc.createElement('style');\n        if (!needStyleEl) {\n            styleEl.innerHTML = cssText;\n        } else {\n            if (isDynamicScoped) {\n                styleEl['s-sc'] = cssScopeId = baseScope.cssScopeId + \"-\" + this.count;\n                styleEl.innerHTML = '/*needs update*/';\n                this.hostStyleMap.set(hostEl, styleEl);\n                this.hostScopeMap.set(hostEl, reScope(baseScope, cssScopeId));\n                this.count++;\n            } else {\n                baseScope.styleEl = styleEl;\n                if (!baseScope.isDynamic) {\n                    styleEl.innerHTML = executeTemplate(baseScope.template, {});\n                }\n                this.globalScopes.push(baseScope);\n                this.updateGlobal();\n                this.hostScopeMap.set(hostEl, baseScope);\n            }\n        }\n        return styleEl;\n    };\n    CustomStyle.prototype.removeHost = function (hostEl) {\n        var css = this.hostStyleMap.get(hostEl);\n        if (css) {\n            css.remove();\n        }\n        this.hostStyleMap.delete(hostEl);\n        this.hostScopeMap.delete(hostEl);\n    };\n    CustomStyle.prototype.updateHost = function (hostEl) {\n        var scope = this.hostScopeMap.get(hostEl);\n        if (scope && scope.isDynamic && scope.cssScopeId) {\n            var styleEl = this.hostStyleMap.get(hostEl);\n            if (styleEl) {\n                var selectors = getActiveSelectors(hostEl, this.hostScopeMap, this.globalScopes);\n                var props = resolveValues(selectors);\n                styleEl.innerHTML = executeTemplate(scope.template, props);\n            }\n        }\n    };\n    CustomStyle.prototype.updateGlobal = function () {\n        updateGlobalScopes(this.globalScopes);\n    };\n    CustomStyle.prototype.registerHostTemplate = function (cssText, scopeId) {\n        var scope = this.scopesMap.get(scopeId);\n        if (!scope) {\n            scope = parseCSS(cssText);\n            scope.cssScopeId = scopeId;\n            this.scopesMap.set(scopeId, scope);\n        }\n        return scope;\n    };\n    return CustomStyle;\n}();\nvar win = window;\nfunction needsShim() {\n    return !(win.CSS && win.CSS.supports && win.CSS.supports('color', 'var(--c)'));\n}\nif (!win.__stencil_cssshim && needsShim()) {\n    win.__stencil_cssshim = new CustomStyle(win, document);\n}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 7.chunk.3f19d.js","/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n/** @unrestricted */\nvar StyleNode = /** @class */ (function () {\n    function StyleNode() {\n        this.start = 0;\n        this.end = 0;\n        this.previous = null;\n        this.parent = null;\n        this.rules = null;\n        this.parsedCssText = '';\n        this.cssText = '';\n        this.atRule = false;\n        this.type = 0;\n        this.keyframesName = '';\n        this.selector = '';\n        this.parsedSelector = '';\n    }\n    return StyleNode;\n}());\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parse(text) {\n    text = clean(text);\n    return parseCss(lex(text), text);\n}\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n    return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n    var root = new StyleNode();\n    root['start'] = 0;\n    root['end'] = text.length;\n    var n = root;\n    for (var i = 0, l = text.length; i < l; i++) {\n        if (text[i] === OPEN_BRACE) {\n            if (!n['rules']) {\n                n['rules'] = [];\n            }\n            var p = n;\n            var previous = p['rules'][p['rules'].length - 1] || null;\n            n = new StyleNode();\n            n['start'] = i + 1;\n            n['parent'] = p;\n            n['previous'] = previous;\n            p['rules'].push(n);\n        }\n        else if (text[i] === CLOSE_BRACE) {\n            n['end'] = i + 1;\n            n = n['parent'] || root;\n        }\n    }\n    return root;\n}\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n    var t = text.substring(node['start'], node['end'] - 1);\n    node['parsedCssText'] = node['cssText'] = t.trim();\n    if (node.parent) {\n        var ss = node.previous ? node.previous['end'] : node.parent['start'];\n        t = text.substring(ss, node['start'] - 1);\n        t = _expandUnicodeEscapes(t);\n        t = t.replace(RX.multipleSpaces, ' ');\n        // TODO(sorvell): ad hoc; make selector include only after last ;\n        // helps with mixin syntax\n        t = t.substring(t.lastIndexOf(';') + 1);\n        var s = node['parsedSelector'] = node['selector'] = t.trim();\n        node['atRule'] = (s.indexOf(AT_START) === 0);\n        // note, support a subset of rule types...\n        if (node['atRule']) {\n            if (s.indexOf(MEDIA_START) === 0) {\n                node['type'] = types.MEDIA_RULE;\n            }\n            else if (s.match(RX.keyframesRule)) {\n                node['type'] = types.KEYFRAMES_RULE;\n                node['keyframesName'] = node['selector'].split(RX.multipleSpaces).pop();\n            }\n        }\n        else {\n            if (s.indexOf(VAR_START) === 0) {\n                node['type'] = types.MIXIN_RULE;\n            }\n            else {\n                node['type'] = types.STYLE_RULE;\n            }\n        }\n    }\n    var r$ = node['rules'];\n    if (r$) {\n        for (var i = 0, l = r$.length, r = void 0; (i < l) && (r = r$[i]); i++) {\n            parseCss(r, text);\n        }\n    }\n    return node;\n}\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n    return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function () {\n        var code = arguments[1], repeat = 6 - code.length;\n        while (repeat--) {\n            code = '0' + code;\n        }\n        return '\\\\' + code;\n    });\n}\n/** @enum {number} */\nvar types = {\n    STYLE_RULE: 1,\n    KEYFRAMES_RULE: 7,\n    MEDIA_RULE: 4,\n    MIXIN_RULE: 1000\n};\nvar OPEN_BRACE = '{';\nvar CLOSE_BRACE = '}';\n// helper regexp's\nvar RX = {\n    comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n    port: /@import[^;]*;/gim,\n    customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n    mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n    mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n    varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n    keyframesRule: /^@[^\\s]*keyframes/,\n    multipleSpaces: /\\s+/g\n};\nvar VAR_START = '--';\nvar MEDIA_START = '@media';\nvar AT_START = '@';\nfunction findRegex(regex, cssText, offset) {\n    regex['lastIndex'] = 0;\n    var r = cssText.substring(offset).match(regex);\n    if (r) {\n        var start = offset + r['index'];\n        return {\n            start: start,\n            end: start + r[0].length\n        };\n    }\n    return null;\n}\nvar VAR_USAGE_START = /\\bvar\\(/;\nvar VAR_ASSIGN_START = /\\B--[\\w-]+\\s*:/;\nvar COMMENTS = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim;\nvar TRAILING_LINES = /^[\\t ]+\\n/gm;\nfunction resolveVar(props, prop, fallback) {\n    if (props[prop]) {\n        return props[prop];\n    }\n    if (fallback) {\n        return executeTemplate(fallback, props);\n    }\n    return '';\n}\nfunction findVarEndIndex(cssText, offset) {\n    var count = 0;\n    var i = offset;\n    for (; i < cssText.length; i++) {\n        var c = cssText[i];\n        if (c === '(') {\n            count++;\n        }\n        else if (c === ')') {\n            count--;\n            if (count <= 0) {\n                return i + 1;\n            }\n        }\n    }\n    return i;\n}\nfunction parseVar(cssText, offset) {\n    var varPos = findRegex(VAR_USAGE_START, cssText, offset);\n    if (!varPos) {\n        return null;\n    }\n    var endVar = findVarEndIndex(cssText, varPos.start);\n    var varContent = cssText.substring(varPos.end, endVar - 1);\n    var _a = varContent.split(','), propName = _a[0], fallback = _a.slice(1);\n    return {\n        start: varPos.start,\n        end: endVar,\n        propName: propName.trim(),\n        fallback: fallback.length > 0 ? fallback.join(',').trim() : undefined\n    };\n}\nfunction compileVar(cssText, template, offset) {\n    var varMeta = parseVar(cssText, offset);\n    if (!varMeta) {\n        template.push(cssText.substring(offset, cssText.length));\n        return cssText.length;\n    }\n    var propName = varMeta.propName;\n    var fallback = varMeta.fallback != null ? compileTemplate(varMeta.fallback) : undefined;\n    template.push(cssText.substring(offset, varMeta.start), function (params) { return resolveVar(params, propName, fallback); });\n    return varMeta.end;\n}\nfunction executeTemplate(template, props) {\n    var final = '';\n    for (var i = 0; i < template.length; i++) {\n        var s = template[i];\n        final += (typeof s === 'string')\n            ? s\n            : s(props);\n    }\n    return final;\n}\nfunction findEndValue(cssText, offset) {\n    var onStr = false;\n    var double = false;\n    var i = offset;\n    for (; i < cssText.length; i++) {\n        var c = cssText[i];\n        if (onStr) {\n            if (double && c === '\"') {\n                onStr = false;\n            }\n            if (!double && c === '\\'') {\n                onStr = false;\n            }\n        }\n        else {\n            if (c === '\"') {\n                onStr = true;\n                double = true;\n            }\n            else if (c === '\\'') {\n                onStr = true;\n                double = false;\n            }\n            else if (c === ';') {\n                return i + 1;\n            }\n            else if (c === '}') {\n                return i;\n            }\n        }\n    }\n    return i;\n}\nfunction removeCustomAssigns(cssText) {\n    var final = '';\n    var offset = 0;\n    while (true) {\n        var assignPos = findRegex(VAR_ASSIGN_START, cssText, offset);\n        var start = assignPos ? assignPos.start : cssText.length;\n        final += cssText.substring(offset, start);\n        if (assignPos) {\n            offset = findEndValue(cssText, start);\n        }\n        else {\n            break;\n        }\n    }\n    return final;\n}\nfunction compileTemplate(cssText) {\n    var index = 0;\n    cssText = cssText.replace(COMMENTS, '');\n    cssText = removeCustomAssigns(cssText)\n        .replace(TRAILING_LINES, '');\n    var segments = [];\n    while (index < cssText.length) {\n        index = compileVar(cssText, segments, index);\n    }\n    return segments;\n}\nfunction resolveValues(selectors) {\n    var props = {};\n    selectors.forEach(function (selector) {\n        selector.declarations.forEach(function (dec) {\n            props[dec.prop] = dec.value;\n        });\n    });\n    var propsValues = {};\n    var entries = Object.entries(props);\n    var _loop_1 = function (i) {\n        var dirty = false;\n        entries.forEach(function (_a) {\n            var key = _a[0], value = _a[1];\n            var propValue = executeTemplate(value, propsValues);\n            if (propValue !== propsValues[key]) {\n                propsValues[key] = propValue;\n                dirty = true;\n            }\n        });\n        if (!dirty) {\n            return \"break\";\n        }\n    };\n    for (var i = 0; i < 10; i++) {\n        var state_1 = _loop_1(i);\n        if (state_1 === \"break\")\n            break;\n    }\n    return propsValues;\n}\nfunction getSelectors(root, index) {\n    if (index === void 0) {\n        index = 0;\n    }\n    if (!root.rules) {\n        return [];\n    }\n    var selectors = [];\n    root.rules\n        .filter(function (rule) { return rule.type === types.STYLE_RULE; })\n        .forEach(function (rule) {\n        var declarations = getDeclarations(rule.cssText);\n        if (declarations.length > 0) {\n            rule.parsedSelector.split(',').forEach(function (selector) {\n                selector = selector.trim();\n                selectors.push({\n                    selector: selector,\n                    declarations: declarations,\n                    specificity: computeSpecificity(selector),\n                    nu: index\n                });\n            });\n        }\n        index++;\n    });\n    return selectors;\n}\nfunction computeSpecificity(_selector) {\n    return 1;\n}\nvar IMPORTANT = '!important';\nvar FIND_DECLARATIONS = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gm;\nfunction getDeclarations(cssText) {\n    var declarations = [];\n    var xArray;\n    while (xArray = FIND_DECLARATIONS.exec(cssText.trim())) {\n        var _a = normalizeValue(xArray[2]), value = _a.value, important = _a.important;\n        declarations.push({\n            prop: xArray[1].trim(),\n            value: compileTemplate(value),\n            important: important,\n        });\n    }\n    return declarations;\n}\nfunction normalizeValue(value) {\n    var regex = /\\s+/gim;\n    value = value.replace(regex, ' ').trim();\n    var important = value.endsWith(IMPORTANT);\n    if (important) {\n        value = value.substr(0, value.length - IMPORTANT.length).trim();\n    }\n    return {\n        value: value,\n        important: important\n    };\n}\nfunction getActiveSelectors(hostEl, hostScopeMap, globalScopes) {\n    // computes the css scopes that might affect this particular element\n    var scopes = globalScopes.concat(getScopesForElement(hostScopeMap, hostEl));\n    // each scope might have an array of associated selectors\n    // let's flatten the complete array of selectors from all the scopes\n    var selectorSet = getSelectorsForScopes(scopes);\n    // we filter to only the selectors that matches the hostEl\n    var activeSelectors = selectorSet.filter(function (selector) { return matches(hostEl, selector.selector); });\n    // sort selectors by specifity\n    return sortSelectors(activeSelectors);\n}\nfunction getScopesForElement(hostTemplateMap, node) {\n    var scopes = [];\n    while (node) {\n        var scope = hostTemplateMap.get(node);\n        if (scope) {\n            scopes.push(scope);\n        }\n        node = node.parentElement;\n    }\n    return scopes;\n}\nfunction getSelectorsForScopes(scopes) {\n    var selectors = [];\n    scopes.forEach(function (scope) {\n        selectors.push.apply(selectors, scope.selectors);\n    });\n    return selectors;\n}\nfunction sortSelectors(selectors) {\n    selectors.sort(function (a, b) {\n        if (a.specificity === b.specificity) {\n            return a.nu - b.nu;\n        }\n        return a.specificity - b.specificity;\n    });\n    return selectors;\n}\nfunction matches(el, selector) {\n    return el.matches(selector);\n}\nfunction parseCSS(original) {\n    var ast = parse(original);\n    var template = compileTemplate(original);\n    var selectors = getSelectors(ast);\n    return {\n        original: original,\n        template: template,\n        selectors: selectors,\n        isDynamic: template.length > 1\n    };\n}\nfunction addGlobalStyle(globalScopes, styleEl) {\n    var css = parseCSS(styleEl.innerHTML);\n    css.styleEl = styleEl;\n    globalScopes.push(css);\n}\nfunction updateGlobalScopes(scopes) {\n    var selectors = getSelectorsForScopes(scopes);\n    var props = resolveValues(selectors);\n    scopes.forEach(function (scope) {\n        if (scope.isDynamic) {\n            scope.styleEl.innerHTML = executeTemplate(scope.template, props);\n        }\n    });\n}\nfunction reScope(scope, cssScopeId) {\n    var template = scope.template.map(function (segment) {\n        return (typeof segment === 'string')\n            ? replaceScope(segment, scope.cssScopeId, cssScopeId)\n            : segment;\n    });\n    var selectors = scope.selectors.map(function (sel) {\n        return Object.assign({}, sel, { selector: replaceScope(sel.selector, scope.cssScopeId, cssScopeId) });\n    });\n    return Object.assign({}, scope, { template: template,\n        selectors: selectors,\n        cssScopeId: cssScopeId });\n}\nfunction replaceScope(original, oldScopeId, newScopeId) {\n    original = replaceAll(original, \"\\\\.\" + oldScopeId, \".\" + newScopeId);\n    return original;\n}\nfunction replaceAll(input, find, replace) {\n    return input.replace(new RegExp(find, 'g'), replace);\n}\nfunction loadDocument(doc, globalScopes) {\n    return loadDocumentLinks(doc, globalScopes).then(function () {\n        loadDocumentStyles(doc, globalScopes);\n    });\n}\nfunction loadDocumentLinks(doc, globalScopes) {\n    var promises = [];\n    var linkElms = doc.querySelectorAll('link[rel=\"stylesheet\"][href]');\n    for (var i = 0; i < linkElms.length; i++) {\n        promises.push(addGlobalLink(doc, globalScopes, linkElms[i]));\n    }\n    return Promise.all(promises);\n}\nfunction loadDocumentStyles(doc, globalScopes) {\n    var styleElms = doc.querySelectorAll('style');\n    for (var i = 0; i < styleElms.length; i++) {\n        addGlobalStyle(globalScopes, styleElms[i]);\n    }\n}\nfunction addGlobalLink(doc, globalScopes, linkElm) {\n    var url = linkElm.href;\n    return fetch(url).then(function (rsp) { return rsp.text(); }).then(function (text) {\n        if (hasCssVariables(text) && linkElm.parentNode) {\n            if (hasRelativeUrls(text)) {\n                text = fixRelativeUrls(text, url);\n            }\n            var styleEl = doc.createElement('style');\n            styleEl.innerHTML = text;\n            addGlobalStyle(globalScopes, styleEl);\n            linkElm.parentNode.insertBefore(styleEl, linkElm);\n            linkElm.remove();\n        }\n    }).catch(function (err) {\n        console.error(err);\n    });\n}\n// This regexp tries to determine when a variable is declared, for example:\n//\n// .my-el { --highlight-color: green; }\n//\n// but we don't want to trigger when a classname uses \"--\" or a pseudo-class is\n// used. We assume that the only characters that can preceed a variable\n// declaration are \"{\", from an opening block, \";\" from a preceeding rule, or a\n// space. This prevents the regexp from matching a word in a selector, since\n// they would need to start with a \".\" or \"#\". (We assume element names don't\n// start with \"--\").\nvar CSS_VARIABLE_REGEXP = /[\\s;{]--[-a-zA-Z0-9]+\\s*:/m;\nfunction hasCssVariables(css) {\n    return css.indexOf('var(') > -1 || CSS_VARIABLE_REGEXP.test(css);\n}\n// This regexp find all url() usages with relative urls\nvar CSS_URL_REGEXP = /url[\\s]*\\([\\s]*['\"]?(?![http|/])([^\\'\\\"\\)]*)[\\s]*['\"]?\\)[\\s]*/gim;\nfunction hasRelativeUrls(css) {\n    CSS_URL_REGEXP.lastIndex = 0;\n    return CSS_URL_REGEXP.test(css);\n}\nfunction fixRelativeUrls(css, originalUrl) {\n    // get the basepath from the original import url\n    var basePath = originalUrl.replace(/[^/]*$/, '');\n    // replace the relative url, with the new relative url\n    return css.replace(CSS_URL_REGEXP, function (fullMatch, url) {\n        // rhe new relative path is the base path + uri\n        // TODO: normalize relative URL\n        var relativeUrl = basePath + url;\n        return fullMatch.replace(url, relativeUrl);\n    });\n}\nvar CustomStyle = /** @class */ (function () {\n    function CustomStyle(win, doc) {\n        this.win = win;\n        this.doc = doc;\n        this.count = 0;\n        this.hostStyleMap = new WeakMap();\n        this.hostScopeMap = new WeakMap();\n        this.globalScopes = [];\n        this.scopesMap = new Map();\n    }\n    CustomStyle.prototype.initShim = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this.win.requestAnimationFrame(function () {\n                loadDocument(_this.doc, _this.globalScopes).then(function () { return resolve(); });\n            });\n        });\n    };\n    CustomStyle.prototype.addLink = function (linkEl) {\n        var _this = this;\n        return addGlobalLink(this.doc, this.globalScopes, linkEl).then(function () {\n            _this.updateGlobal();\n        });\n    };\n    CustomStyle.prototype.addGlobalStyle = function (styleEl) {\n        addGlobalStyle(this.globalScopes, styleEl);\n        this.updateGlobal();\n    };\n    CustomStyle.prototype.createHostStyle = function (hostEl, cssScopeId, cssText) {\n        if (this.hostScopeMap.has(hostEl)) {\n            throw new Error('host style already created');\n        }\n        var baseScope = this.registerHostTemplate(cssText, cssScopeId);\n        var isDynamicScoped = !!(baseScope.isDynamic && baseScope.cssScopeId);\n        var needStyleEl = isDynamicScoped || !baseScope.styleEl;\n        var styleEl = this.doc.createElement('style');\n        if (!needStyleEl) {\n            styleEl.innerHTML = cssText;\n        }\n        else {\n            if (isDynamicScoped) {\n                styleEl['s-sc'] = cssScopeId = baseScope.cssScopeId + \"-\" + this.count;\n                styleEl.innerHTML = '/*needs update*/';\n                this.hostStyleMap.set(hostEl, styleEl);\n                this.hostScopeMap.set(hostEl, reScope(baseScope, cssScopeId));\n                this.count++;\n            }\n            else {\n                baseScope.styleEl = styleEl;\n                if (!baseScope.isDynamic) {\n                    styleEl.innerHTML = executeTemplate(baseScope.template, {});\n                }\n                this.globalScopes.push(baseScope);\n                this.updateGlobal();\n                this.hostScopeMap.set(hostEl, baseScope);\n            }\n        }\n        return styleEl;\n    };\n    CustomStyle.prototype.removeHost = function (hostEl) {\n        var css = this.hostStyleMap.get(hostEl);\n        if (css) {\n            css.remove();\n        }\n        this.hostStyleMap.delete(hostEl);\n        this.hostScopeMap.delete(hostEl);\n    };\n    CustomStyle.prototype.updateHost = function (hostEl) {\n        var scope = this.hostScopeMap.get(hostEl);\n        if (scope && scope.isDynamic && scope.cssScopeId) {\n            var styleEl = this.hostStyleMap.get(hostEl);\n            if (styleEl) {\n                var selectors = getActiveSelectors(hostEl, this.hostScopeMap, this.globalScopes);\n                var props = resolveValues(selectors);\n                styleEl.innerHTML = executeTemplate(scope.template, props);\n            }\n        }\n    };\n    CustomStyle.prototype.updateGlobal = function () {\n        updateGlobalScopes(this.globalScopes);\n    };\n    CustomStyle.prototype.registerHostTemplate = function (cssText, scopeId) {\n        var scope = this.scopesMap.get(scopeId);\n        if (!scope) {\n            scope = parseCSS(cssText);\n            scope.cssScopeId = scopeId;\n            this.scopesMap.set(scopeId, scope);\n        }\n        return scope;\n    };\n    return CustomStyle;\n}());\nvar win = window;\nfunction needsShim() {\n    return !(win.CSS && win.CSS.supports && win.CSS.supports('color', 'var(--c)'));\n}\nif (!win.__stencil_cssshim && needsShim()) {\n    win.__stencil_cssshim = new CustomStyle(win, document);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/widgettest/dist/esm/legacy/css-shim-229ebf7a-229ebf7a.js"],"sourceRoot":""}